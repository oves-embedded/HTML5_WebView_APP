name: OV APK CI/CD for Building and Releasing Artifacts to S3 and Packages
on:
  push:
    branches: [ master ]
    tags: [ "v*" ]

jobs:
  build:
    name: 🔨 Build gradle Project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2
      - name: Set Up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: "11"
      - name: Make Gradle Executable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew build --stacktrace

  lint-check:
    name: 🔍 Linting
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2
      - name: Make Gradle Executable
        run: chmod +x ./gradlew
      - name: Lint Check
        run: ./gradlew lint
      - name: Generate lint report
        uses: actions/upload-artifact@v4
        with:
          name: lint-report.html
          path: app/build/reports/lint-result-debug.html

  generate-release-apk:
    name: ⚙ Generate Release APK
    needs: [ build,lint-check ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.2.2
      - name: Set Up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"
      - name: Make Gradle Executable
        run: chmod +x ./gradlew
      - name: Build Release APK
        run: ./gradle assembleRelease --stacktrace
      - name: Upload Release APK
        uses: actions/upload-artifiact@v1
        with:
          name: OVES App
          path: app/build/outputs/apk/release/app-release-unsigned.apk
          gitReleaseNotes: true

  create-releases:
    name: 🎉 Create release
    needs: [ generate-release-apk ]
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v4.1.7
        with:
          name: Note-Me-Release
      - name: Get Last Tag from GitHub Environment
        id: get_last_tag
        run: |
          TAG=$(git tag --sort=-creatordate | head -n 1)
          echo "last_tag=${TAG}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.G_TOKEN}}
        with:
          tag_name: v${{env.last_tag}}
          release_name: v${{env.last_tag}}

      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{secrets.G_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: app/build/outputs/apk/app-release-unsigned.apk
          gitReleaseNotes: true
          asset_name: OVES App.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Publish to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.G_TOKEN }}
        run: |
          apk_path=$(find app/build/outputs/apk/release -name "*.apk")
          gh release create "${env.last_tag}" "$apk_path" --title "Release v${env.last_tag}" --generate-notes

      - name: Upload APK to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: app/build/outputs/apk/release