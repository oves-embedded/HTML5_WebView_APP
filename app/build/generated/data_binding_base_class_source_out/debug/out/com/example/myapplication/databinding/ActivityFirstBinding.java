// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFirstBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnBleScanner;

  @NonNull
  public final Button btnDemo;

  @NonNull
  public final Button btnImageCropper;

  @NonNull
  public final Button btnWebSite;

  @NonNull
  public final EditText etWebsite;

  private ActivityFirstBinding(@NonNull LinearLayout rootView, @NonNull Button btnBleScanner,
      @NonNull Button btnDemo, @NonNull Button btnImageCropper, @NonNull Button btnWebSite,
      @NonNull EditText etWebsite) {
    this.rootView = rootView;
    this.btnBleScanner = btnBleScanner;
    this.btnDemo = btnDemo;
    this.btnImageCropper = btnImageCropper;
    this.btnWebSite = btnWebSite;
    this.etWebsite = etWebsite;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFirstBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFirstBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_first, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFirstBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBleScanner;
      Button btnBleScanner = ViewBindings.findChildViewById(rootView, id);
      if (btnBleScanner == null) {
        break missingId;
      }

      id = R.id.btnDemo;
      Button btnDemo = ViewBindings.findChildViewById(rootView, id);
      if (btnDemo == null) {
        break missingId;
      }

      id = R.id.btnImageCropper;
      Button btnImageCropper = ViewBindings.findChildViewById(rootView, id);
      if (btnImageCropper == null) {
        break missingId;
      }

      id = R.id.btnWebSite;
      Button btnWebSite = ViewBindings.findChildViewById(rootView, id);
      if (btnWebSite == null) {
        break missingId;
      }

      id = R.id.etWebsite;
      EditText etWebsite = ViewBindings.findChildViewById(rootView, id);
      if (etWebsite == null) {
        break missingId;
      }

      return new ActivityFirstBinding((LinearLayout) rootView, btnBleScanner, btnDemo,
          btnImageCropper, btnWebSite, etWebsite);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
